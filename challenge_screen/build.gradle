plugins {
    id 'com.android.library'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'maven-publish'
}

android {
    compileSdk compile_sdk

    defaultConfig {
        minSdk min_sdk
        targetSdk target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            kotlinOptions {
                freeCompilerArgs += [
                        '-opt-in=kotlin.RequiresOptIn',
                ]
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerVersion kotlin_compiler_version
        kotlinCompilerExtensionVersion kotlin_compiler_extension_version
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.ohrae-git'
                artifactId = 'ZeroEyesChallengeScreen'
                version = '0.0.1'
            }

            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug
                groupId = 'com.github.ohrae-git'
                artifactId = 'ZeroEyesChallengeScreen'
                version = '0.0.1'
            }
        }
    }
}

dependencies {
    // androidX
    implementation androidXCore
    implementation androidXAppCompat
    implementation androidMaterial
    testImplementation junit
    androidTestImplementation junitExt
    androidTestImplementation espressoCore

    // compose
    implementation composeUI
    implementation composeMaterial
    implementation composeUIToolingPreView
    implementation composeRuntimeLiveData
    implementation composeUITooling
    debugImplementation composeUITooling
    runtimeOnly composeRuntime
    debugImplementation customView
    debugImplementation customViewPoolingContainer

    // lifecycle
    implementation lifecycleRuntimeKtx
    implementation lifecycleViewModelCompose
    implementation lifecycleViewModelKtx
    implementation androidXActivityCompose
    implementation androidXWindow

    // hilt
    implementation hiltAndroid
    implementation hiltNavigationCompose
//    implementation androidXHiltLifecycleViewModel
    annotationProcessor daggerHiltAndroidCompiler
    annotationProcessor androidXHiltCompiler
    kapt daggerHiltCompiler
    kapt daggerHiltAndroidCompiler
    kaptAndroidTest daggerHiltCompiler
    androidTestImplementation daggerHiltAndroidTesting

    // accompanist
    implementation accompanistPager
    implementation accompanistTheme
    implementation accompanistPermissions
    implementation accompanistSystemUIController
    implementation accompanistNavigationAnimation
    implementation accompanistFlowLayout
    implementation accompanistWebView

    // Timber
    implementation timber

    // Gson
    implementation gson

    // glide
    implementation landscapistGlide
    implementation glideAnnotations
    kapt glideCompiler

    implementation project(':challenge')
    implementation project(':challenge_repo')
}